version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend  # Diretório onde está o Dockerfile do frontend
      dockerfile: Dockerfile  # O Dockerfile específico para o frontend
    expose:
      - "80"  # Expõe a porta 80 dentro da rede Docker (não precisa mapear para o host diretamente)
    depends_on:
      - backend
    networks:
      - app-network  # Adiciona a rede personalizada

  backend:
    build: 
      context: ./backend  # Diretório onde está o Dockerfile do backend
      dockerfile: Dockerfile  # O Dockerfile específico para o backend
    expose:
      - "3000"  # Expõe a porta 3000 dentro da rede Docker
    environment:
      - DATABASE_URL=postgres://postgres:faculdade@db:5432/chess_db  # URL de conexão com o banco de dados
    depends_on:
      - db
    networks:
      - app-network  # Adiciona a rede personalizada

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: faculdade
      POSTGRES_DB: chess_db
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistência de dados
    ports:
      - "5432:5432"  # Mapeia a porta 5432 para o host
    networks:
      - app-network  # Adiciona a rede personalizada

  nginx:
    build: ./nginx  # Diretório onde está o Dockerfile do Nginx
    ports:
      - "8080:80"  # Mapeia a porta 8080 do host para a porta 80 do contêiner
    depends_on:
      - frontend
      - backend
    networks:
      - app-network  # Adiciona a rede personalizada

# Rede personalizada para os serviços se comunicarem
networks:
  app-network:
    driver: bridge  # Usando a rede bridge para comunicação entre os contêineres

# Volume para persistir dados do banco de dados
volumes:
  postgres_data:
